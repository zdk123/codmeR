// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Hamdist
int Hamdist(NumericVector xi, NumericVector xj);
RcppExport SEXP codmeR_Hamdist(SEXP xiSEXP, SEXP xjSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type xj(xjSEXP );
        int __result = Hamdist(xi, xj);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// HamdistMat
NumericMatrix HamdistMat(NumericMatrix x);
RcppExport SEXP codmeR_HamdistMat(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        NumericMatrix __result = HamdistMat(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// coCalc
int coCalc(NumericVector xi, NumericVector xj, int sumint = 2);
RcppExport SEXP codmeR_coCalc(SEXP xiSEXP, SEXP xjSEXP, SEXP sumintSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type xi(xiSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type xj(xjSEXP );
        Rcpp::traits::input_parameter< int >::type sumint(sumintSEXP );
        int __result = coCalc(xi, xj, sumint);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// coCalcMat
NumericMatrix coCalcMat(NumericMatrix x, int sumint = 2);
RcppExport SEXP codmeR_coCalcMat(SEXP xSEXP, SEXP sumintSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type sumint(sumintSEXP );
        NumericMatrix __result = coCalcMat(x, sumint);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// cooccurMat
NumericMatrix cooccurMat(NumericMatrix x);
RcppExport SEXP codmeR_cooccurMat(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        NumericMatrix __result = cooccurMat(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// coabsenceMat
NumericMatrix coabsenceMat(NumericMatrix x);
RcppExport SEXP codmeR_coabsenceMat(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        NumericMatrix __result = coabsenceMat(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// fastaitvar
arma::mat fastaitvar(arma::mat A);
RcppExport SEXP codmeR_fastaitvar(SEXP ASEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP );
        arma::mat __result = fastaitvar(A);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
